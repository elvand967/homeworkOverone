# Домашнее задание Задача №31
# Прикрепите файл с кодом, демонстрирующий работу разных видов методов класса

# Ра́диус-ве́ктор — вектор, задающий положение точки в пространстве относительно
# некоторой заранее фиксированной точки, называемой началом координат.
# Декартовы координаты: Прямоугольная система координат — прямолинейная система координат
# с взаимно перпендикулярными осями на плоскости или в пространстве.

class Vector():
    MIN_COORD = 0   # атрибут класса
    MAX_COORD = 100 # -/- допустимое максимальное значение координат
    COUNT = 0       # -/- счетчик созданных объектов class Vector()

    @classmethod
    def validate(cls, arg): # Метод класса работает исключительно с атрибутами класса
        return cls.MIN_COORD <= arg <= cls.MAX_COORD # при принятии атрибута
                                # входящего в допустимый диапозон, получим True

    def __init__(self,x,y):
        self.x = self.y = 0 # изночально координаты точки установим в начало координат
        if self.validate(x) and self.validate(y): # Метод класса проверяет принимаемые координаты на допустимые
            self.x = x  # при допустимом значении в указанном диапозоне
            self.y = y  # объекту класса присваиваем переданные значения
        Vector.COUNT += 1
        print(f'Вектор № {self.COUNT}: имеет координаты  {self.get_coord()}, '
              f'радиус вектора: {self.radius_vector(x, y)}')  # работа статического метода
        # при инициализации экземпляра класса

    def get_coord(self): # обычная функция (Метод экземпляра класса ) вывода координат объекта (экземпляра класса)
        return self.x, self.y

    @staticmethod
    def radius_vector(x, y): # статическая функция определения радиуса вектора принятых координат(r**2 = x**2 + y**2)
        return (x**2 + y**2)**0.5


vector_1 = Vector(10,20)
print(vector_1.get_coord()) # (10,20) # работа метода экземпляра класса
vector_2 = Vector(30,40)
print(vector_2.get_coord()) # (10,20) # работа метода экземпляра класса
print(Vector.validate(50)) # True # работа Метода класса напрямую через класс без обращения к экземпляру класса
print(f'Радиуса вектора точки с координатами (3,6): {Vector.radius_vector(3,6)}') # 6.708203932499369
# работа статического метода - определение радиуса вектора без создания экземпляра класса.